{
  "swagger": "2.0",
  "info": {
    "description": "This is a documentation and front-client to consume convenia test api. This API managemant providers and monthly payment.",
    "version": "1.0.0",
    "title": "Convenia API Test",
    "contact": {
      "email": "wess_ribeiro@hotmail.com"
    }
  },
  "host": "convenia",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "register user into the system",
        "operationId": "register",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs user into the system",
        "operationId": "login",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The user email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/providers": {
      "get": {
        "tags": [
          "providers"
        ],
        "summary": "Get providers",
        "operationId": "getProviders",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "providers"
        ],
        "summary": "Create provider",
        "operationId": "createProvider",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/providers"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/providers/{id}": {
      "get": {
        "tags": [
          "providers"
        ],
        "summary": "Get provider by id",
        "operationId": "getProvider",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "providers"
        ],
        "summary": "Update provider",
        "operationId": "updateProvider",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/providers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "providers"
        ],
        "summary": "Delete provider",
        "operationId": "deleteProvider",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "users": {
      "type": "object",
      "properties": {
        "postcode": {
          "type": "string",
          "description": "postcode of company with format: #####-###"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string",
          "description": "phone of company with format: 55 (11) 9####-####"
        },
        "cnpj": {
          "type": "string",
          "description": "cnpj of company with format: ##.###.###/####-##"
        },
        "adress": {
          "type": "string",
          "description": "adress full of company"
        }
      }
    },
    "providers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of provider"
        },
        "email": {
          "type": "string"
        },
        "monthly": {
          "type": "number",
          "description": "User Status"
        }
      }
    }
  },
  "externalDocs": {
    "description": "github.com/wessRibeiro/convenia",
    "url": "https://github.com/wessRibeiro/convenia"
  }
}